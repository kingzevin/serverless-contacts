// Generated by CoffeeScript 1.12.7
(function() {
  var ContactManager, ObjectId, db, logger, metrics, ref;

  ref = require("./mongojs"), db = ref.db, ObjectId = ref.ObjectId;

  logger = require('logger-sharelatex');

  metrics = require('metrics-sharelatex');

  module.exports = ContactManager = {
    touchContact: function(user_id, contact_id, callback) {
      var error, update;
      if (callback == null) {
        callback = function(error) {};
      }
      try {
        user_id = ObjectId(user_id.toString());
      } catch (error1) {
        error = error1;
        return callback(error);
      }
      update = {
        $set: {},
        $inc: {}
      };
      update.$inc["contacts." + contact_id + ".n"] = 1;
      update.$set["contacts." + contact_id + ".ts"] = new Date();
      return db.contacts.update({
        user_id: user_id
      }, update, {
        upsert: true
      }, callback);
    },
    getContacts: function(user_id, callback) {
      var error;
      if (callback == null) {
        callback = function(error) {};
      }
      try {
        user_id = ObjectId(user_id.toString());
      } catch (error1) {
        error = error1;
        return callback(error);
      }
      return db.contacts.findOne({
        user_id: user_id
      }, function(error, user) {
        if (error != null) {
          return callback(error);
        }
        return callback(null, user != null ? user.contacts : void 0);
      });
    }
  };

  ['touchContact', 'getContacts'].map(function(method) {
    return metrics.timeAsyncMethod(ContactManager, method, 'mongo.ContactManager', logger);
  });

}).call(this);

//# sourceMappingURL=ContactManager.js.map
